name: rich-codex
author: Phil Ewels

description: Create rich code images for your docs

branding:
  icon: "terminal"
  color: "blue"

inputs:
  search_include:
    description: Glob patterns to files in which to search for rich-codex comments
    required: false
  search_exclude:
    description: Glob patterns to exclude from search for rich-codex comments
    required: false
  no_search:
    description: Set to 'true' to disable searching for rich-codex comments
    required: false
  command:
    description: Specify a command to run to capture output
    required: false
  timeout:
    description: Maximum run time for command (seconds)
    required: false
  working_dir:
    description: Working directory to run command in (relative to root of project)
    required: false
  before_command:
    description: Setup commands to run before running main output command
    required: false
  after_command:
    description: Setup commands to run after running main output command
    required: false
  snippet:
    description: Literal code snippet to render
    required: false
  snippet_syntax:
    description: Language to use for snippet sytax highlighting
    required: false
  img_paths:
    description: Path to image filenames if using 'command' or 'snippet'
    required: false
  clean_img_paths:
    description: Remove any matching files that are not generated
    required: false
  rc_configs:
    description: Paths to YAML config files
    required: false
  fake_command:
    description: Pretend command to show in the screenshot prompt
    required: false
  hide_command:
    description: Hide the terminal prompt with the command at the top of the output
    required: false
  title_command:
    description: Use the command as the terminal title if not set explicitly
    required: false
  head:
    description: Show only the first N lines of output
    required: false
  tail:
    description: Show only the last N lines of output
    required: false
  trim_after:
    description: Don't print any more lines after this string is found
    required: false
  truncated_text:
    description: Text to show when '--head' or '--tail' truncate content
    required: false
  skip_git_checks:
    description: Skip safety checks for git repos
    required: false
  min_pct_diff:
    description: Minimum file percentage change required to update image
    required: false
  skip_change_regex:
    description: Skip image update if file changes match regex
    required: false
  terminal_width:
    description: Width of the terminal
    required: false
  terminal_min_width:
    description: Minimum width of the terminal (use trimming)
    required: false
  notrim:
    description: Disable automatic trimming of terminal width
    required: false
  terminal_theme:
    description: Colour theme
    required: false
  snippet_theme:
    description: Snippet Pygments theme
    required: false
  use_pty:
    description: Use a pseudo-terminal for commands (may capture coloured output)
    required: false
  log_verbose:
    description: Print verbose output to the console.
    required: false
  commit_changes:
    description: Automatically commit changes to the repository
    required: false
  error_changes:
    description: Exit with an error if changes are found (Ignored if 'commit_changes' is true)
    default: "true"
    required: false
  use_uv:
    description: If true, use uv to manage python and install dependencies.
    default: "false"
    required: false
  skip_python_setup:
    description: If true, skip Python setup (or skip uv setup if `use_uv` is true). Only use this if you already set up Python in a previous step, e.g. to install additional dependencies. When combined with `use_uv`, this assumes you already ran the `astral-sh/setup-uv` action.
    default: "false"
    required: false
  python_verison:
    description: Which version of Python to use when setting up Python or uv.
    default: "3"
    required: false

runs:
  using: "composite"
  steps:
    - name: Set up uv
      if: inputs.skip_python_setup != 'true' && inputs.use_uv == 'true'
      uses: astral-sh/setup-uv@v5
      with:
        python-version: 3.x

    - name: Set up Python
      if: inputs.skip_python_setup != 'true' && inputs.use_uv != 'true'
      uses: actions/setup-python@v5
      with:
        python-version: 3.x

    - name: Install rich-codex with uv
      if: inputs.use_uv == 'true'
      run: |
        echo "::group::Installing rich-codex"
        sudo apt install fonts-firacode
        uv pip install "rich-codex[cairo]"
        echo "::endgroup::"
      shell: bash

    - name: Install rich-codex with pip
      if: inputs.use_uv != 'true'
      run: |
        echo "::group::Installing rich-codex"
        sudo apt install fonts-firacode
        pip install "rich-codex[cairo]"
        echo "::endgroup::"
      shell: bash

    - name: Run rich-codex
      run: rich-codex
      shell: bash
      env:
        SEARCH_INCLUDE: ${{ inputs.search_include }}
        SEARCH_EXCLUDE: ${{ inputs.search_exclude }}
        NO_SEARCH: ${{ inputs.no_search }}
        COMMAND: ${{ inputs.command }}
        TIMEOUT: ${{ inputs.timeout }}
        WORKING_DIR: ${{ inputs.working_dir }}
        BEFORE_COMMAND: ${{ inputs.before_command }}
        AFTER_COMMAND: ${{ inputs.after_command }}
        SNIPPET: ${{ inputs.snippet }}
        SNIPPET_SYNTAX: ${{ inputs.snippet_syntax }}
        IMG_PATHS: ${{ inputs.img_paths }}
        CLEAN_IMG_PATHS: ${{ inputs.clean_img_paths }}
        RC_CONFIGS: ${{ inputs.rc_configs }}
        FAKE_COMMAND: ${{ inputs.fake_command }}
        HIDE_COMMAND: ${{ inputs.hide_command }}
        TITLE_COMMAND: ${{ inputs.title_command }}
        RC_HEAD: ${{ inputs.head }}
        RC_TAIL: ${{ inputs.tail }}
        TRIM_AFTER: ${{ inputs.trim_after }}
        TRUNCATED_TEXT: ${{ inputs.truncated_text }}
        SKIP_GIT_CHECKS: ${{ inputs.skip_git_checks }}
        MIN_PCT_DIFF: ${{ inputs.min_pct_diff }}
        SKIP_CHANGE_REGEX: ${{ inputs.skip_change_regex }}
        TERMINAL_WIDTH: ${{ inputs.terminal_width }}
        TERMINAL_MIN_WIDTH: ${{ inputs.terminal_min_width }}
        NOTRIM: ${{ inputs.notrim }}
        TERMINAL_THEME: ${{ inputs.terminal_theme }}
        SNIPPET_THEME: ${{ inputs.snippet_theme }}
        USE_PTY: ${{ inputs.use_pty }}
        CREATED_FILES: "created.txt"
        DELETED_FILES: "deleted.txt"
        LOG_VERBOSE: ${{ inputs.log_verbose }}
        LOG_SAVE: "true"
        NO_CONFIRM: "true"

    - name: Add and commit new images
      shell: bash
      run: |
        echo "::group::Pushing any changes found"
        git config --local user.name 'github-actions[bot]'
        git config --local user.email 'github-actions[bot]@users.noreply.github.com'
        echo "üïµÔ∏è‚Äç‚ôÄÔ∏è Git status after run:"
        git status -s
        if [[ -f created.txt || -f deleted.txt ]]; then
          echo "üí• Found some changes from running rich-codex!"
          if [[ ${{ inputs.commit_changes }} ]]; then
            [[ -f created.txt ]] && git add $(cat created.txt)
            [[ -f deleted.txt ]] && git rm $(cat deleted.txt)
            git commit -m "Generate new screengrabs with rich-codex"
            git push
            echo "ü§ñ Pushed commit with new changes!"
          elif [[ ${{ inputs.error_changes }} ]]; then
            echo "ü§ñ Tip: Use 'commit_changes' to automatically commit them next time."
            (exit 1)
          fi
        else
          echo "ü§´ No changes from rich-codex found!"
        fi
        echo "::endgroup::"

    - name: Upload sync log file artifact
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: Rich-codex log file
        path: rich_codex_*.log
